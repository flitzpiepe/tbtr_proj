
updated:    2019-02-05


STACK
		- docommandp callbacks
			? need to check for the command result in the callback function
			- document all funcs
        - release
            - prettify tt-f post
			- code review
				? return value of docommandp used in the wrong way
                    - don't see where, seems to be used in the same way in industry_gui.cpp:618
					- only gui code executed conditionally after docommandp, this should be network-agnostic
                ! ui
                    ! fix tooltips
                    ! gui is broken when changing the interface size (settings)
						! the initial offset for y should be set depending on the actual interface size
						- check if there are font size settings in the advanced settings or somewhere
                    - "template is in use" -> "template used by ${n} groups"
                    - ui: find an alternative for the labels
                        - see autoreplace gui or rail construction gui
                    ? rename button keep rem -> keep remainders
                        - also rename refit -> use refit
                        -> needs more space
                        - check under different interface sizes
                    - ui reorg
                        - remove unused elements
                        - button groupings
                            - add/del/modify templates
                            - replacement options
                            - start stop replacement
				? commented code
				- redo commit history
					- check commit message style
						https://wiki.openttd.org/Commit_style#Commit_message

	LATER
		? INVALID_TEMPLATE should be a static const
			* it's also the case for INVALID_VEHICLE
			! doesn't compile, some error from the network code because an include needs to be added in group.h
        - give templates a name
        - make buttons larger, are too tiny to click -.-
		- have a script to build
			- against the current svn branch
			- against the current nightly build
			- against the current stable release
		- check all the _HELP texts of the gui's widgets
		- some of the widget defs don't seem to be used
		- switch button text color depending on whether a group and or a template and or an engine are
		  selected
		- filtering by railtype
			- add selector for the railtype
			- filters template list
                - each template should store its type, which is updated when the template is updated
			? filters engine list
			- make sure that the gui's index_selected_template is handled correctly otherwise this will lead to crashes
		- function: clone train from template
		- ensure a sane template composition
			- testbuy a template
				* impossible, cannot test-buy and test-move the non-existing chain members at the same time
				* branch test/testbuy_template
			- inherit from Train
				* train is final, don't know if it's a good idea to change this
				* TVs would draw from the pool of vehicles
				- need to make sure that TVs
					- don't influence any vehicle statistics
					- don't appear in any other group, window, ...
					- buying or moving them doesn't cost any money
			- don't do anything and hope that the player will create valid templates
		- drag and drop for template parts
			?between existing templates
			? or just for the selected template
		! engine gui, last cell is displayed with double height which snaps into the correct size once the UI is
		- deleting a template should put the selection on the next available one
		- text strings
			- check for all string definitions with TBTR, if they are actually used somewhere
			- normalize their names
		- template deletion
			- after delete, select the next template in line, if any
			- button: delete all templates
		! TemplateVehicle::ContainsRailType(...)
			? is it used
			? is the railtype attr used anywhere
			! the check ignores monorail and maglev types
		? why is there no separate header for the cmd functions
		- rename all TRW_WIDGET_TMPL_ elements
		- normalize {} convention for switch-case
		- TemplateVehicle::Draw(): refactor params, e.g. 'right' is not even used
		- autoreplacement: it would be better to still do it if tbtr is impossible, e.g. due to current money
			- allow scheduling of both
			- move tbtr before autorpl in callvehticks
			? prevent autorepl for a train if tbtr succeeded
				* e.g. by removing it from the mapping
		- scheduling of tbtr
			- check if group of train has a template
			- check if train already matches the template
			- autoreplace handles start/stop of the vehicle via CmdStartStopVehicle(), l.708
		- the selected group index should be updated to stick with the current group if another group is added or removed
			- same for the templates list
		- clone from existing template
			? what happens right now when doing this
			* could be useful when the editing is available or just to set other options
		? all header includes into cpp files
		? template options stored in group instead of template
			* in order to configure each template replacement indiviually, without the need of a new template each
			time
			- display template replacement options in group row
		- show floating money cost numbers after a replacement
		- TemplateVehicle::CalculateCost() might also include the refit cost and maybe more
			? use the command functions to do this simulation
			- cache the total cost in the template itself
				- cached_total_cost
		*** GUI is currently running with this->owner==_local_company
			* watch out for possible side effects because this has never been the case before
		- prevent multiple instances of the tbtr gui
		- check all loops and ifs in this file for {} convention
		- check for unused functions
		- check when group + template list are being rebuilt
			* TbtrGui::OnPaint doesn't rebuild the template list but rebuilds the groups list
			* either both should be rebuilt or none
			- check all occurrences of the rebuild funcs and see if they're needed everywhere
		? is it necessary to have the owner specified in the tbtr gui
			* should be always the _local_company
		! add missing documentation
			- also review the comment for the CmdTemplateReplace function
		- templatevehicle: remove or rename the bool methods (getters)
		- calc # trains that still need replacement + update the main gui accordingly
			* commented code still exists
		? remove TemplateVehicle::prev
		? rename all .h -> .hpp
		- remove prev and first from TV
		- impl macro: for all templates from->to
			* e.g.: TbtrGui::DrawTemplates
		- untested: warning string for free-wagon-chains
			* because with cloning we cannot create such a template, will need to wait for the edit function
		- see how ..._TMPLRPL_EX_DIFF_RAILTYPE was used in the old code and either reintegrate it or remove it
		from the lang file
		- compute the line_height for the tbtr gui, without this being an external param
		? is TemplateVehicle::index really necessary
			* might be defined via PoolItem's index already, the TemplatePool is defined with TemplateID as a template parameter
		? deal with parent groups
		...

	FUNCTIONALITIES TO INTEGRATE
		- list templates
		- replace all vehicles in template
		- template replacement
		- list template details
		- test TbtrGui::BuildTemplateList()
			*(this->templates.Append()) = tv;
		- tbtrgui should have the owner as member
			- refactor all methods which get an Owner as parameter
		? needed, maybe rm
			template_vehicle.h : TemplateID FindTemplateIndexForGroup(GroupID);


	PATCH FEATURES

	- train gui, extra menu point, manage list -> Template Replacement

	- gui: Template Replacement
		- list groups
		- list templates
		- list train details for selected template
		- set selected template options
			- use veh in depot
			- keep rems
			- use refit

	- create new template train
	- edit existing template train
	- delete template train
	- replace all vehicles in a template train
	- start/stop replacing group's trains -> template train
	- select rail type for template replacement


	FILES MODIFIED BY THE PATCH 0.701

		ects/openttd_vs100.vcxproj
		ects/openttd_vs100.vcxproj.filters
		ects/openttd_vs80.vcproj
		ects/openttd_vs90.vcproj
		ce.list
		autoreplace_cmd.cpp
		autoreplace_func.h
		command.cpp
		command_type.h
		depot_gui.cpp
		group_cmd.cpp
		group_gui.cpp
		lang/english.txt
		newgrf.h
		newgrf_engine.cpp
		newgrf_spritegroup.cpp
		order_cmd.cpp
		saveload/afterload.cpp
		saveload/saveload.cpp
		saveload/saveload.h
		saveload/saveload_internal.h
		saveload/tbtr_template_replacement_sl.cpp
		saveload/tbtr_template_veh_sl.cpp
		tbtr_template_gui_create.cpp
		tbtr_template_gui_create.h
    tbtr_template_gui_create_virtualtrain.cpp
    tbtr_template_gui_create_virtualtrain.h
    tbtr_template_gui_main.cpp
    tbtr_template_gui_main.h
    tbtr_template_gui_replaceall.cpp
    tbtr_template_gui_replaceall.h
    tbtr_template_vehicle.cpp
    tbtr_template_vehicle.h
    tbtr_template_vehicle_func.cpp
    tbtr_template_vehicle_func.h
    train.h
    train_cmd.cpp
    vehicle.cpp
    vehicle_base.h
    vehicle_cmd.cpp
    vehicle_gui.cpp
    vehicle_gui.h
    vehicle_gui_base.h
    vehiclelist.cpp
    viewport.cpp
    widgets/build_vehicle_widget.h
    window_type.h
